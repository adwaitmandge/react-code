{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adwait\\\\OneDrive\\\\Desktop\\\\react-advanced-2020\\\\src\\\\tutorial\\\\4-forms\\\\setup\\\\1-controlled-inputs.js\";\nimport React, { useState } from \"react\"; // JS\n// const input = document.getElementById('myText');\n// const inputValue = input.value\n// React\n// value, onChange\n\nconst ControlledInputs = () => {\n  //To access the form data we use stateValues\n  const [name, setName] = useState('Adwait');\n  const [email, setEmail] = useState('');\n\n  const clickHandler = evt => {\n    evt.preventDefault(); //essentially, now we are not refreshing the page when we are submitting the form\n\n    setName();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: clickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"Name : \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"firstName\",\n    value: name,\n    onChange: evt => setName(evt.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Email : \"), \"//Here target basically refers to the element that you're adding the e\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"email\",\n    value: email,\n    onChange: evt => setEmail(evt.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"Add Person\"))));\n};\n\nexport default ControlledInputs;","map":{"version":3,"sources":["C:/Users/Adwait/OneDrive/Desktop/react-advanced-2020/src/tutorial/4-forms/setup/1-controlled-inputs.js"],"names":["React","useState","ControlledInputs","name","setName","email","setEmail","clickHandler","evt","preventDefault","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC7B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,QAAD,CAAhC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,YAAY,GAAIC,GAAD,IAAS;AAC5BA,IAAAA,GAAG,CAACC,cAAJ,GAD4B,CAE5B;;AACAL,IAAAA,OAAO;AACR,GAJD;;AAMA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEG,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAME;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,EAAE,EAAC,WAAtB;AAAkC,IAAA,KAAK,EAAEJ,IAAzC;AAA+C,IAAA,QAAQ,EAAGK,GAAD,IAASJ,OAAO,CAACI,GAAG,CAACE,MAAJ,CAAWC,KAAZ,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,eAUE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,yFAGE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,EAAE,EAAC,OAAtB;AAA8B,IAAA,KAAK,EAAEN,KAArC;AAA4C,IAAA,QAAQ,EAAGG,GAAD,IAASF,QAAQ,CAACE,GAAG,CAACE,MAAJ,CAAWC,KAAZ,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAVF,eAeE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF,CADF,CADF,CADF;AAuBD,CAlCD;;AAoCA,eAAeT,gBAAf","sourcesContent":["import React, { useState } from \"react\";\r\n// JS\r\n// const input = document.getElementById('myText');\r\n// const inputValue = input.value\r\n// React\r\n// value, onChange\r\n\r\nconst ControlledInputs = () => {\r\n  //To access the form data we use stateValues\r\n  const [name, setName] = useState('Adwait');\r\n  const [email, setEmail] = useState('');\r\n\r\n  const clickHandler = (evt) => {\r\n    evt.preventDefault();\r\n    //essentially, now we are not refreshing the page when we are submitting the form\r\n    setName()\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <article>\r\n        <form className=\"form\" onSubmit={clickHandler}>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"firstName\">Name : </label>\r\n\r\n            {/* Adding a 'value' prop without onChange handler is going to make the input field immutable, \r\n              so you can either add the onChange handler or change 'value' to 'defaultValue'\r\n            */}\r\n            <input type=\"text\" id=\"firstName\" value={name} onChange={(evt) => setName(evt.target.value)}  />\r\n          </div>\r\n\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"email\">Email : </label>\r\n            //Here target basically refers to the element that you're adding the e\r\n            <input type=\"text\" id=\"email\" value={email} onChange={(evt) => setEmail(evt.target.value)}  />\r\n          </div>\r\n          <button type='submit'>Add Person</button>\r\n        </form>\r\n      </article>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ControlledInputs;\r\n"]},"metadata":{},"sourceType":"module"}