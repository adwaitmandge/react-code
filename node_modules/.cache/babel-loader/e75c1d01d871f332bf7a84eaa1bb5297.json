{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nconst url = 'https://api.github.com/users/QuincyLarsons';\n\nconst MultipleReturns = () => {\n  const [loading, setLoading] = useState(true); //Infinite loop\n  // if(loading){\n  //   setLoading(false);\n  //   return <h2>Loading......</h2>\n  // }\n  // else{\n  //   setLoading(true);\n  //   return <h2>multiple returns</h2>\n  // }\n}; // const MultipleReturns = () => {\n//   let i = 0;\n//   const [isLoading, setisLoading] = useState(false);\n//   const [isError, setisError] = useState(false);\n//   const [user, setUser] = useState('Default user');\n//   //setState() functions are asynchronous functions and to understand what is rendering after which setState, you can visualise a queue\n//   useEffect(() => {\n//     setisLoading(true);\n//     fetch(url)\n//     //fetch is not going to trigger any error if the status code is 404 i.e. if we search for the wrong user \n//       .then(res => {\n//         if(res.status >= 200 && res.status <=299){\n//           return res.json();\n//         }\n//         else{\n//           setisLoading(false);\n//           setisError(true);\n//           throw new Error(res.statusText);\n//         }\n//       })\n//       .then(user => {\n//         const {login} = user;\n//         setUser(login);\n//         setisLoading(false);\n//       })\n//       .catch(err => {\n//         console.log(i);\n//         setisError(true);\n//       });\n//   }, []);\n//   if(isLoading){\n//     console.log(\"Is loading\");\n//     return <div>\n//       <h2>Loading.....</h2>\n//     </div>\n//   }\n//   if(isError){\n//     console.log(\"Error\");\n//     return <div>\n//       <h2>Error!!</h2>\n//     </div>\n//   }\n//   if(user){\n//     console.log(\"User\");\n//     return <div>\n//       <h2>{user}</h2>\n//     </div>\n//   }\n// };\n\n\nexport default MultipleReturns;","map":{"version":3,"sources":["C:/Users/Adwait/OneDrive/Desktop/react-advanced-2020/src/tutorial/3-conditional-rendering/setup/1-multiple-returns.js"],"names":["React","useState","useEffect","url","MultipleReturns","loading","setLoading"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,MAAMC,GAAG,GAAG,4CAAZ;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC5B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC,CAD4B,CAG5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAbD,C,CAeA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeG,eAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nconst url = 'https://api.github.com/users/QuincyLarsons';\r\n\r\nconst MultipleReturns = () => {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  //Infinite loop\r\n\r\n  // if(loading){\r\n  //   setLoading(false);\r\n  //   return <h2>Loading......</h2>\r\n  // }\r\n  // else{\r\n  //   setLoading(true);\r\n  //   return <h2>multiple returns</h2>\r\n  // }\r\n};\r\n \r\n// const MultipleReturns = () => {\r\n//   let i = 0;\r\n//   const [isLoading, setisLoading] = useState(false);\r\n//   const [isError, setisError] = useState(false);\r\n//   const [user, setUser] = useState('Default user');\r\n\r\n\r\n//   //setState() functions are asynchronous functions and to understand what is rendering after which setState, you can visualise a queue\r\n//   useEffect(() => {\r\n//     setisLoading(true);\r\n//     fetch(url)\r\n//     //fetch is not going to trigger any error if the status code is 404 i.e. if we search for the wrong user \r\n//       .then(res => {\r\n//         if(res.status >= 200 && res.status <=299){\r\n//           return res.json();\r\n//         }\r\n//         else{\r\n//           setisLoading(false);\r\n//           setisError(true);\r\n//           throw new Error(res.statusText);\r\n//         }\r\n//       })\r\n//       .then(user => {\r\n//         const {login} = user;\r\n//         setUser(login);\r\n//         setisLoading(false);\r\n//       })\r\n//       .catch(err => {\r\n//         console.log(i);\r\n//         setisError(true);\r\n//       });\r\n//   }, []);\r\n\r\n//   if(isLoading){\r\n//     console.log(\"Is loading\");\r\n//     return <div>\r\n//       <h2>Loading.....</h2>\r\n//     </div>\r\n//   }\r\n  \r\n//   if(isError){\r\n//     console.log(\"Error\");\r\n//     return <div>\r\n//       <h2>Error!!</h2>\r\n//     </div>\r\n//   }\r\n  \r\n//   if(user){\r\n//     console.log(\"User\");\r\n//     return <div>\r\n//       <h2>{user}</h2>\r\n//     </div>\r\n//   }\r\n// };\r\n\r\nexport default MultipleReturns;\r\n"]},"metadata":{},"sourceType":"module"}