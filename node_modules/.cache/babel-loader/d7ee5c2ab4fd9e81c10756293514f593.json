{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adwait\\\\OneDrive\\\\Desktop\\\\react-advanced-2020\\\\src\\\\tutorial\\\\7-prop-drilling\\\\setup\\\\1-prop-drilling.js\";\nimport React, { useState, useReducer } from \"react\";\nimport { data } from \"../../../data\"; // more components\n// fix - context api, redux (for more complex cases)\n//Prop-drilling is basically a sideeffect when we have multiple components and a component tree and you need to start passing some state from the top component to the bottom component of the component tree\n\nconst defaultState = {\n  people: [],\n  isModalOpen: false,\n  modalContent: \"\"\n};\n\nconst reducer = (state, action) => {};\n\nconst PropDrilling = () => {\n  const [state, dispatch] = useReducer(reducer, defaultState);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"prop drilling\"), /*#__PURE__*/React.createElement(List, {\n    people: state.people,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst List = ({\n  people\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, people.map(person => {\n    return /*#__PURE__*/React.createElement(SinglePerson, Object.assign({\n      key: person.id\n    }, person, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }\n    }));\n  }));\n};\n\nconst SinglePerson = ({\n  id,\n  name\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, name));\n};\n\nexport default PropDrilling;","map":{"version":3,"sources":["C:/Users/Adwait/OneDrive/Desktop/react-advanced-2020/src/tutorial/7-prop-drilling/setup/1-prop-drilling.js"],"names":["React","useState","useReducer","data","defaultState","people","isModalOpen","modalContent","reducer","state","action","PropDrilling","dispatch","List","map","person","id","SinglePerson","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,IAAT,QAAqB,eAArB,C,CACA;AACA;AAEA;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,WAAW,EAAE,KAFM;AAGnBC,EAAAA,YAAY,EAAE;AAHK,CAArB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB,CAAE,CAArC;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAM,CAACF,KAAD,EAAQG,QAAR,IAAoBV,UAAU,CAACM,OAAD,EAAUJ,YAAV,CAApC;AAEA,sBACE,uDACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAEK,KAAK,CAACJ,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANF,CADF;AAaD,CAhBD;;AAkBA,MAAMQ,IAAI,GAAG,CAAC;AAAER,EAAAA;AAAF,CAAD,KAAgB;AAC3B,sBACE,0CACGA,MAAM,CAACS,GAAP,CAAYC,MAAD,IAAY;AACtB,wBAAO,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,MAAM,CAACC;AAA1B,OAAkCD,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAFA,CADH,CADF;AAOD,CARD;;AAUA,MAAME,YAAY,GAAG,CAAC;AAAED,EAAAA,EAAF;AAAME,EAAAA;AAAN,CAAD,KAAkB;AACrC,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAL,CADF,CADF;AAKD,CAND;;AAQA,eAAeP,YAAf","sourcesContent":["import React, { useState, useReducer } from \"react\";\r\nimport { data } from \"../../../data\";\r\n// more components\r\n// fix - context api, redux (for more complex cases)\r\n\r\n//Prop-drilling is basically a sideeffect when we have multiple components and a component tree and you need to start passing some state from the top component to the bottom component of the component tree\r\n\r\nconst defaultState = {\r\n  people: [],\r\n  isModalOpen: false,\r\n  modalContent: \"\",\r\n};\r\n\r\nconst reducer = (state, action) => {};\r\n\r\nconst PropDrilling = () => {\r\n  const [state, dispatch] = useReducer(reducer, defaultState);\r\n\r\n  return (\r\n    <>\r\n      <form className=\"form\">\r\n        <div>\r\n          <input type=\"text\"></input>\r\n        </div>\r\n      </form>\r\n      <section>\r\n        <h3>prop drilling</h3>\r\n        <List people={state.people} />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nconst List = ({ people }) => {\r\n  return (\r\n    <>\r\n      {people.map((person) => {\r\n        return <SinglePerson key={person.id} {...person} />;\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nconst SinglePerson = ({ id, name }) => {\r\n  return (\r\n    <div className=\"item\">\r\n      <h4>{name}</h4>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PropDrilling;\r\n"]},"metadata":{},"sourceType":"module"}