{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adwait\\\\OneDrive\\\\Desktop\\\\react-advanced-2020\\\\src\\\\tutorial\\\\7-prop-drilling\\\\setup\\\\1-prop-drilling.js\";\nimport React, { useState } from 'react';\nimport { data } from '../../../data'; // more components\n// fix - context api, redux (for more complex cases)\n//Prop-drilling is basically a sideeffect when we have multiple components and a component tree and you need to start passing some state from the top component to the bottom component of the component tree\n\nconst PropDrilling = () => {\n  const [people, setPeople] = useState(data);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"prop drilling\"), /*#__PURE__*/React.createElement(List, {\n    people: people,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst List = ({\n  people\n}) => {\n  return;\n  {\n    people.map(person => {\n      /*#__PURE__*/\n      React.createElement(SinglePerson, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 5\n        }\n      });\n    });\n  }\n};\n\nconst SinglePerson = () => {\n  return;\n};\n\nexport default PropDrilling;","map":{"version":3,"sources":["C:/Users/Adwait/OneDrive/Desktop/react-advanced-2020/src/tutorial/7-prop-drilling/setup/1-prop-drilling.js"],"names":["React","useState","data","PropDrilling","people","setPeople","List","map","person","SinglePerson"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,IAAR,QAAmB,eAAnB,C,CACA;AACA;AAGA;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAACC,IAAD,CAApC;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAEE,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CATD;;AAWA,MAAME,IAAI,GAAG,CAAC;AAACF,EAAAA;AAAD,CAAD,KAAc;AACzB;AACA;AAACA,IAAAA,MAAM,CAACG,GAAP,CAAWC,MAAM,IAAI;AACpB;AAAA,0BAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,KAFA;AAEE;AACJ,CALD;;AAOA,MAAMC,YAAY,GAAG,MAAM;AACzB;AACD,CAFD;;AAIA,eAAeN,YAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport {data} from '../../../data';\r\n// more components\r\n// fix - context api, redux (for more complex cases)\r\n\r\n\r\n//Prop-drilling is basically a sideeffect when we have multiple components and a component tree and you need to start passing some state from the top component to the bottom component of the component tree\r\n\r\nconst PropDrilling = () => {\r\n  const [people, setPeople] = useState(data);\r\n\r\n  return (\r\n    <section>\r\n      <h3>prop drilling</h3>\r\n      <List people={people} />\r\n    </section>\r\n  )\r\n};\r\n\r\nconst List = ({people}) => {\r\n  return \r\n  {people.map(person => {\r\n    <SinglePerson/>\r\n  })}\r\n};\r\n\r\nconst SinglePerson = () => {\r\n  return\r\n};\r\n\r\nexport default PropDrilling;\r\n"]},"metadata":{},"sourceType":"module"}