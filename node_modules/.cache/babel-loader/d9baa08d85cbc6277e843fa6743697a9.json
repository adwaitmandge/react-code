{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adwait\\\\OneDrive\\\\Desktop\\\\react-advanced-2020\\\\src\\\\tutorial\\\\2-useEffect\\\\setup\\\\1-useEffect-basics.js\";\nimport { getSingleElementValue } from '@testing-library/jest-dom/dist/utils';\nimport React, { useState, useEffect } from 'react'; // by default useEffect runs after every re-render\n// cleanup function\n// second parameter\n//The useEffect() hook allows you to work on side-effects, basically anyting that is outside your component, even console.log() is considered as a side-effect\n//The way useEffect() works is that you pass in a callback that runs after every render\n\nconst UseEffectBasics = () => {\n  useEffect(() => {\n    console.log(\"useEffect\");\n  });\n  console.log('render component');\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, value), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => getSingleElementValue(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default UseEffectBasics;","map":{"version":3,"sources":["C:/Users/Adwait/OneDrive/Desktop/react-advanced-2020/src/tutorial/2-useEffect/setup/1-useEffect-basics.js"],"names":["getSingleElementValue","React","useState","useEffect","UseEffectBasics","console","log","value"],"mappings":";AAAA,SAASA,qBAAT,QAAsC,sCAAtC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;AACA;AACA;AAEA;AAEA;;AACA,MAAMC,eAAe,GAAG,MAAM;AAC5BD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,GAFQ,CAAT;AAIAD,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,KAAL,CADF,eAEE;AAAQ,IAAA,OAAO,EAAE,MAAMP,qBAAqB,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAZD;;AAcA,eAAeI,eAAf","sourcesContent":["import { getSingleElementValue } from '@testing-library/jest-dom/dist/utils';\r\nimport React, { useState, useEffect } from 'react';\r\n// by default useEffect runs after every re-render\r\n// cleanup function\r\n// second parameter\r\n\r\n//The useEffect() hook allows you to work on side-effects, basically anyting that is outside your component, even console.log() is considered as a side-effect\r\n\r\n//The way useEffect() works is that you pass in a callback that runs after every render\r\nconst UseEffectBasics = () => {\r\n  useEffect(() => {\r\n    console.log(\"useEffect\");\r\n  });\r\n\r\n  console.log('render component');\r\n  return (\r\n    <>\r\n      <h1>{value}</h1>\r\n      <button onClick={() => getSingleElementValue()}></button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UseEffectBasics;\r\n"]},"metadata":{},"sourceType":"module"}