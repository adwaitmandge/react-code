{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adwait\\\\OneDrive\\\\Desktop\\\\react-advanced-2020\\\\src\\\\tutorial\\\\7-prop-drilling\\\\setup\\\\1-prop-drilling.js\";\nimport React, { useState, useReducer } from \"react\";\nimport { data } from \"../../../data\"; // more components\n// fix - context api, redux (for more complex cases)\n//Prop-drilling is basically a sideeffect when we have multiple components and a component tree and you need to start passing some state from the top component to the bottom component of the component tree\n\nconst defaultState = {\n  people: [],\n  isModalOpen: false,\n  modalContent: \"\"\n};\n\nconst reducer = (state, action) => {\n  if (action.type === 'ADD_ITEM') {\n    const newPeople = [...state.people, action.payload];\n    return { ...state,\n      people: newPeople\n    };\n  } else if (action.type === 'REMOVE_ITEM') {\n    const newPeople = state.people.filter(person => person.id !== action.payload);\n    return { ...state,\n      people: newPeople\n    };\n  }\n};\n\nconst PropDrilling = () => {\n  const [state, dispatch] = useReducer(reducer, defaultState);\n  const [input, setInput] = useState('');\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (input) {\n      dispatch({\n        type: 'ADD_ITEM',\n        payload: {\n          id: new Date().getTime().toString(),\n          input\n        }\n      });\n      setInput('');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: input,\n    onChange: e => setInput(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Add Person\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"prop drilling\"), /*#__PURE__*/React.createElement(List, {\n    people: state.people,\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst List = ({\n  people,\n  dispatch\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, people.map(person => {\n    return /*#__PURE__*/React.createElement(SinglePerson, Object.assign({\n      key: person.id\n    }, person, {\n      dispatch: dispatch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 16\n      }\n    }));\n  }));\n};\n\nconst SinglePerson = ({\n  id,\n  name,\n  dispatch\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, name), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => dispatch({\n      type: 'REMOVE_ITEM'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Remove\"));\n};\n\nexport default PropDrilling;","map":{"version":3,"sources":["C:/Users/Adwait/OneDrive/Desktop/react-advanced-2020/src/tutorial/7-prop-drilling/setup/1-prop-drilling.js"],"names":["React","useState","useReducer","data","defaultState","people","isModalOpen","modalContent","reducer","state","action","type","newPeople","payload","filter","person","id","PropDrilling","dispatch","input","setInput","submitHandler","e","preventDefault","Date","getTime","toString","target","value","List","map","SinglePerson","name"],"mappings":"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","sourcesContent":["import React, { useState, useReducer } from \"react\";\r\nimport { data } from \"../../../data\";\r\n// more components\r\n// fix - context api, redux (for more complex cases)\r\n\r\n//Prop-drilling is basically a sideeffect when we have multiple components and a component tree and you need to start passing some state from the top component to the bottom component of the component tree\r\n\r\nconst defaultState = {\r\n  people: [],\r\n  isModalOpen: false,\r\n  modalContent: \"\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  if(action.type === 'ADD_ITEM'){\r\n    const newPeople = [...state.people, action.payload];\r\n    return {...state, people:newPeople};\r\n  }\r\n  else if(action.type === 'REMOVE_ITEM'){\r\n    const newPeople = state.people.filter(person => person.id !== action.payload);\r\n    return {...state, people:newPeople};\r\n  }\r\n};\r\n\r\nconst PropDrilling = () => {\r\n  const [state, dispatch] = useReducer(reducer, defaultState);\r\n  const [input, setInput] = useState('');\r\n\r\nconst submitHandler = (e) => {\r\n  e.preventDefault();\r\n  if(input){\r\n    dispatch({type:'ADD_ITEM', payload:{id:new Date().getTime().toString(), input}});\r\n    setInput('');\r\n  }\r\n};\r\n\r\n  return (\r\n    <>\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <input type=\"text\" value={input} onChange={(e) => setInput(e.target.value)} />\r\n        </div>\r\n      <button type=\"button\" className=\"btn\">Add Person</button>\r\n      </form>\r\n      <section>\r\n        <h3>prop drilling</h3>\r\n        <List people={state.people} dispatch={dispatch} />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nconst List = ({ people, dispatch }) => {\r\n  return (\r\n    <>\r\n      {people.map((person) => {\r\n        return <SinglePerson key={person.id} {...person} dispatch={dispatch} />;\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nconst SinglePerson = ({ id, name, dispatch }) => {\r\n  return (\r\n    <div className=\"item\">\r\n      <h4>{name}</h4>\r\n      <button type='button' onClick={() => dispatch({type:'REMOVE_ITEM'})}>Remove</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PropDrilling;\r\n"]},"metadata":{},"sourceType":"module"}