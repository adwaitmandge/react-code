{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adwait\\\\OneDrive\\\\Desktop\\\\react-advanced-2020\\\\src\\\\tutorial\\\\8-useContext\\\\setup\\\\1-context-api.js\";\nimport React, { useState, useContext } from 'react';\nimport { data } from '../../../data'; // more components\n// fix - context api, redux (for more complex cases)\n\nconst PersonContext = React.createContext(); //The moment you use createContext you'll have access to two components -> Provider and Consumer\n//With the arrival of 'useContext', we don't use the 'Consumer'\n//To access the components use PersonContext.provider or PersonContext.consumer etc. \n// 'Provider' works as a distributor, in our example, ContextApi is our root component which is rendering all the other components and providing the 'removePerson' function, so \n\nconst ContextAPI = () => {\n  const [people, setPeople] = useState(data);\n\n  const removePerson = id => {\n    setPeople(people => {\n      return people.filter(person => person.id !== id);\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n    //you can pass whatever you want to value, essentially the information that you would like to pass around, then in the lower levels, you can use 'useContext' to access that information\n    React.createElement(PersonContext.Provider, {\n      value: \"Hello World!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, \"prop drilling\"), /*#__PURE__*/React.createElement(List, {\n      people: people,\n      removePerson: removePerson,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }))\n  );\n};\n\nconst List = ({\n  people,\n  removePerson\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, people.map(person => {\n    return /*#__PURE__*/React.createElement(SinglePerson, Object.assign({\n      key: person.id\n    }, person, {\n      removePerson: removePerson,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }));\n  }));\n};\n\nconst SinglePerson = ({\n  id,\n  name,\n  removePerson\n}) => {\n  const data = useContext;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, name), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => removePerson(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"remove\"));\n};\n\nexport default ContextAPI;","map":{"version":3,"sources":["C:/Users/Adwait/OneDrive/Desktop/react-advanced-2020/src/tutorial/8-useContext/setup/1-context-api.js"],"names":["React","useState","useContext","data","PersonContext","createContext","ContextAPI","people","setPeople","removePerson","id","filter","person","List","map","SinglePerson","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,IAAT,QAAqB,eAArB,C,CACA;AACA;;AAEA,MAAMC,aAAa,GAAGJ,KAAK,CAACK,aAAN,EAAtB,C,CACA;AACA;AAEA;AACA;;AACA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAACE,IAAD,CAApC;;AACA,QAAMM,YAAY,GAAIC,EAAD,IAAQ;AAC3BF,IAAAA,SAAS,CAAED,MAAD,IAAY;AACpB,aAAOA,MAAM,CAACI,MAAP,CAAeC,MAAD,IAAYA,MAAM,CAACF,EAAP,KAAcA,EAAxC,CAAP;AACD,KAFQ,CAAT;AAGD,GAJD;;AAKA;AAAA;AACE;AACA,wBAAC,aAAD,CAAe,QAAf;AAAwB,MAAA,KAAK,EAAC,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE,oBAAC,IAAD;AAAM,MAAA,MAAM,EAAEH,MAAd;AAAsB,MAAA,YAAY,EAAEE,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF;AAFF;AAOD,CAdD;;AAgBA,MAAMI,IAAI,GAAG,CAAC;AAAEN,EAAAA,MAAF;AAAUE,EAAAA;AAAV,CAAD,KAA8B;AACzC,sBACE,0CACGF,MAAM,CAACO,GAAP,CAAYF,MAAD,IAAY;AACtB,wBACE,oBAAC,YAAD;AACE,MAAA,GAAG,EAAEA,MAAM,CAACF;AADd,OAEME,MAFN;AAGE,MAAA,YAAY,EAAEH,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAOD,GARA,CADH,CADF;AAaD,CAdD;;AAgBA,MAAMM,YAAY,GAAG,CAAC;AAAEL,EAAAA,EAAF;AAAMM,EAAAA,IAAN;AAAYP,EAAAA;AAAZ,CAAD,KAAgC;AACnD,QAAMN,IAAI,GAAGD,UAAb;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKc,IAAL,CADF,eAEE;AAAQ,IAAA,OAAO,EAAE,MAAMP,YAAY,CAACC,EAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF;AAMD,CARD;;AAUA,eAAeJ,UAAf","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { data } from '../../../data';\r\n// more components\r\n// fix - context api, redux (for more complex cases)\r\n\r\nconst PersonContext = React.createContext()\r\n//The moment you use createContext you'll have access to two components -> Provider and Consumer\r\n//With the arrival of 'useContext', we don't use the 'Consumer'\r\n\r\n//To access the components use PersonContext.provider or PersonContext.consumer etc. \r\n// 'Provider' works as a distributor, in our example, ContextApi is our root component which is rendering all the other components and providing the 'removePerson' function, so \r\nconst ContextAPI = () => {\r\n  const [people, setPeople] = useState(data);\r\n  const removePerson = (id) => {\r\n    setPeople((people) => {\r\n      return people.filter((person) => person.id !== id);\r\n    });\r\n  };\r\n  return (\r\n    //you can pass whatever you want to value, essentially the information that you would like to pass around, then in the lower levels, you can use 'useContext' to access that information\r\n    <PersonContext.Provider value=\"Hello World!\">\r\n      <h3>prop drilling</h3>\r\n      <List people={people} removePerson={removePerson} />\r\n    </PersonContext.Provider>\r\n  );\r\n};\r\n\r\nconst List = ({ people, removePerson }) => {\r\n  return (\r\n    <>\r\n      {people.map((person) => {\r\n        return (\r\n          <SinglePerson\r\n            key={person.id}\r\n            {...person}\r\n            removePerson={removePerson}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nconst SinglePerson = ({ id, name, removePerson }) => {\r\n  const data = useContext\r\n  return (\r\n    <div className='item'>\r\n      <h4>{name}</h4>\r\n      <button onClick={() => removePerson(id)}>remove</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContextAPI;\r\n"]},"metadata":{},"sourceType":"module"}