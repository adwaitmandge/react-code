{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adwait\\\\OneDrive\\\\Desktop\\\\react-advanced-2020\\\\src\\\\tutorial\\\\6-useReducer\\\\setup\\\\index.js\";\nimport React, { useState, useReducer } from 'react';\nimport Modal from './Modal';\nimport { data } from '../../../data'; // reducer function\n//useReducer is going to add more structure to your state\n//everytime you invoke useReducer it is going to return two values, a stateValue and a dispatch function(), when you invoke useReducer you have to pass in a 'reducer' function\n//The difference between useState and useReducer is that each and everytime you want to do something with the oldState, you must use dispatch it and it must go through the reducer function and reducer function can be considered as something that takes in something called action and then spits out the newState\n//A reducer function basically takes in two things, first is the state and the second is the action where state is the old or currentState and action is what you want to do with that state \n\nconst Index = () => {\n  const [people, setPeople] = useState(data);\n  const [name, setName] = useState('');\n  const [showModal, setShowModal] = useState(false);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (name) {\n      setPeople([...people, {\n        id: new Date().getTime().toString(),\n        name\n      }]);\n      setName('');\n    } else {\n      setShowModal(true);\n      return;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, showModal && /*#__PURE__*/React.createElement(Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Add Item\")), people.map(person => {\n    const {\n      name,\n      id\n    } = person;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: id,\n      className: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, name));\n  }));\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/Adwait/OneDrive/Desktop/react-advanced-2020/src/tutorial/6-useReducer/setup/index.js"],"names":["React","useState","useReducer","Modal","data","Index","people","setPeople","name","setName","showModal","setShowModal","submitHandler","e","preventDefault","id","Date","getTime","toString","target","value","map","person"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,IAAT,QAAqB,eAArB,C,CACA;AAEA;AACA;AAEA;AAEA;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAACG,IAAD,CAApC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMW,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAGN,IAAH,EAAQ;AACND,MAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAY;AAACS,QAAAA,EAAE,EAAC,IAAIC,IAAJ,GAAWC,OAAX,GAAqBC,QAArB,EAAJ;AAAqCV,QAAAA;AAArC,OAAZ,CAAD,CAAT;AACAC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD,KAHD,MAGK;AACHE,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA;AACD;AACF,GATD;;AAWA,sBAAO,0CACJD,SAAS,iBAAI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADT,eAEL;AAAM,IAAA,QAAQ,EAAEE,aAAhB;AAA+B,IAAA,SAAS,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEJ,IAA1B;AAAgC,IAAA,QAAQ,EAAGK,CAAD,IAAOJ,OAAO,CAACI,CAAC,CAACM,MAAF,CAASC,KAAV,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CAFK,EAQJd,MAAM,CAACe,GAAP,CAAWC,MAAM,IAAI;AACpB,UAAM;AAACd,MAAAA,IAAD;AAAOO,MAAAA;AAAP,QAAaO,MAAnB;AACA,wBACE;AAAK,MAAA,GAAG,EAAEP,EAAV;AAAc,MAAA,SAAS,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKP,IAAL,CADF,CADF;AAKD,GAPA,CARI,CAAP;AAiBD,CAjCD;;AAmCA,eAAeH,KAAf","sourcesContent":["import React, { useState, useReducer } from 'react';\r\nimport Modal from './Modal';\r\nimport { data } from '../../../data';\r\n// reducer function\r\n\r\n//useReducer is going to add more structure to your state\r\n//everytime you invoke useReducer it is going to return two values, a stateValue and a dispatch function(), when you invoke useReducer you have to pass in a 'reducer' function\r\n\r\n//The difference between useState and useReducer is that each and everytime you want to do something with the oldState, you must use dispatch it and it must go through the reducer function and reducer function can be considered as something that takes in something called action and then spits out the newState\r\n\r\n//A reducer function basically takes in two things, first is the state and the second is the action where state is the old or currentState and action is what you want to do with that state \r\n\r\nconst Index = () => {\r\n  const [people, setPeople] = useState(data);\r\n  const [name, setName] = useState('');\r\n  const [showModal, setShowModal] = useState(false); \r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if(name){\r\n      setPeople([...people, {id:new Date().getTime().toString(), name}]);\r\n      setName('');\r\n    }else{\r\n      setShowModal(true);\r\n      return;\r\n    }\r\n  }\r\n\r\n  return <>\r\n    {showModal && <Modal/>}\r\n    <form onSubmit={submitHandler} className='form'>\r\n      <div>\r\n        <input type='text' value={name} onChange={(e) => setName(e.target.value)}></input>\r\n      </div>\r\n      <button type='submit' className='btn'>Add Item</button>\r\n    </form>\r\n    {people.map(person => {\r\n      const {name, id} = person;\r\n      return(\r\n        <div key={id} className='item'>\r\n          <h4>{name}</h4>\r\n        </div>\r\n      ) \r\n    })}\r\n  </>;\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}