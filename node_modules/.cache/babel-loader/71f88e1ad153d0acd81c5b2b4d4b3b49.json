{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adwait\\\\OneDrive\\\\Desktop\\\\react-advanced-2020\\\\src\\\\tutorial\\\\4-forms\\\\setup\\\\2-multiple-inputs.js\";\nimport React, { useState } from \"react\"; // JS\n// const input = document.getElementById('myText');\n// const inputValue = input.value\n// React\n// value, onChange\n// dynamic object keys\n//Handling multiple input fields:\n//Instead of having states for each input, it would be better if we could just have one state for a given person\n\nconst ControlledInputs = () => {\n  // const [firstName, setFirstName] = useState('');\n  // const [email, setEmail] = useState('');\n  // const [age, setAge] = useState('');\n  const [person, setPerson] = useState({\n    firstName: \"\",\n    email: \"\",\n    age: \"\"\n  });\n  const [people, setPeople] = useState([]);\n\n  const handleChange = evt => {\n    const name = evt.target.name;\n    const value = evt.target.value; //each and every time you type in the input you are dynamically changing the state value\n\n    setPerson({ ...person,\n      [name]: value,\n      id: new Date().getTime().toString()\n    });\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (person.firstName && person.age && person.email) {\n      const newPerson = { ...person\n      };\n      setPeople(people => {\n        return [...people, newPerson];\n      });\n      setPerson({\n        firstName: \"\",\n        email: \"\",\n        age: \"\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Name : \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"firstName\",\n    name: \"firstName\",\n    value: person.firstName,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Email : \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    value: person.email,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"age\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Age : \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"age\",\n    name: \"age\",\n    value: person.age,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"add person\")), people.map((person, index) => {\n    const {\n      id,\n      firstName,\n      email,\n      age\n    } = person;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"item\",\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, firstName), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, firstName), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, firstName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, email));\n  })));\n};\n\nexport default ControlledInputs;","map":{"version":3,"sources":["C:/Users/Adwait/OneDrive/Desktop/react-advanced-2020/src/tutorial/4-forms/setup/2-multiple-inputs.js"],"names":["React","useState","ControlledInputs","person","setPerson","firstName","email","age","people","setPeople","handleChange","evt","name","target","value","id","Date","getTime","toString","handleSubmit","preventDefault","newPerson","map","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n// JS\r\n// const input = document.getElementById('myText');\r\n// const inputValue = input.value\r\n// React\r\n// value, onChange\r\n// dynamic object keys\r\n\r\n//Handling multiple input fields:\r\n//Instead of having states for each input, it would be better if we could just have one state for a given person\r\n\r\nconst ControlledInputs = () => {\r\n  // const [firstName, setFirstName] = useState('');\r\n  // const [email, setEmail] = useState('');\r\n  // const [age, setAge] = useState('');\r\n  const [person, setPerson] = useState({ firstName: \"\", email: \"\", age: \"\" });\r\n  const [people, setPeople] = useState([]);\r\n\r\n  const handleChange = (evt) => {\r\n    const name = evt.target.name;\r\n    const value = evt.target.value;\r\n    //each and every time you type in the input you are dynamically changing the state value\r\n    setPerson({\r\n      ...person,\r\n      [name]: value,\r\n      id: new Date().getTime().toString(),\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (person.firstName && person.age && person.email) {\r\n      const newPerson = { ...person };\r\n      setPeople((people) => {\r\n        return [...people, newPerson];\r\n      });\r\n\r\n      setPerson({ firstName: \"\", email: \"\", age: \"\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <article>\r\n        <form className=\"form\">\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"firstName\">Name : </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              value={person.firstName}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"email\">Email : </label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              value={person.email}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"age\">Age : </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"age\"\r\n              name=\"age\"\r\n              value={person.age}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" onClick={handleSubmit}>\r\n            add person\r\n          </button>\r\n        </form>\r\n        {people.map((person, index) => {\r\n          const { id, firstName, email, age } = person;\r\n          return (\r\n            <div className=\"item\" key={id}>\r\n              <h4>{firstName}</h4>\r\n              <h4>{firstName}</h4>\r\n              <h4>{firstName}</h4>\r\n              <p>{email}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </article>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ControlledInputs;\r\n"]},"metadata":{},"sourceType":"module"}