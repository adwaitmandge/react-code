{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adwait\\\\OneDrive\\\\Desktop\\\\react-advanced-2020\\\\src\\\\tutorial\\\\7-prop-drilling\\\\setup\\\\1-prop-drilling.js\";\nimport React, { useState } from \"react\";\nimport { data } from \"../../../data\"; // more components\n// fix - context api, redux (for more complex cases)\n//Prop-drilling is basically a sideeffect when we have multiple components and a component tree and you need to start passing some state from the top component to the bottom component of the component tree\n//If we want to pass the 'removePerson' prop from 'PropDrilling' component to 'SinglePerson' component, you'll have to pass it to 'list' component, destructure it there, then pass it onto 'SinglePerson' component where you'll have to destructure it again\n//'List' does not require the 'removePerson' prop for any purpose but \n\nconst PropDrilling = () => {\n  const [people, setPeople] = useState(data);\n\n  const removePerson = id => {\n    const newPeople = people.filter(person => person.id !== id);\n    setPeople(newPeople);\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"prop drilling\"), /*#__PURE__*/React.createElement(List, {\n    people: people,\n    removePerson: removePerson,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst List = ({\n  people,\n  removePerson\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, people.map(person => {\n    return /*#__PURE__*/React.createElement(SinglePerson, Object.assign({\n      key: person.id\n    }, person, {\n      removePerson: removePerson,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 16\n      }\n    }));\n  }));\n};\n\nconst SinglePerson = ({\n  id,\n  name,\n  removePerson\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, name), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => removePerson(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, \"Remove\"));\n};\n\nexport default PropDrilling;","map":{"version":3,"sources":["C:/Users/Adwait/OneDrive/Desktop/react-advanced-2020/src/tutorial/7-prop-drilling/setup/1-prop-drilling.js"],"names":["React","useState","data","PropDrilling","people","setPeople","removePerson","id","newPeople","filter","person","List","map","SinglePerson","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,eAArB,C,CACA;AACA;AAEA;AAGA;AAEA;;AACA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAACC,IAAD,CAApC;;AAEA,QAAMI,YAAY,GAAIC,EAAD,IAAQ;AAC3B,UAAMC,SAAS,GAAGJ,MAAM,CAACK,MAAP,CAAcC,MAAM,IAAIA,MAAM,CAACH,EAAP,KAAcA,EAAtC,CAAlB;AACAF,IAAAA,SAAS,CAACG,SAAD,CAAT;AACD,GAHD;;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAEJ,MAAd;AAAsB,IAAA,YAAY,EAAEE,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAdD;;AAgBA,MAAMK,IAAI,GAAG,CAAC;AAAEP,EAAAA,MAAF;AAAUE,EAAAA;AAAV,CAAD,KAA8B;AACzC,sBACE,0CACGF,MAAM,CAACQ,GAAP,CAAYF,MAAD,IAAY;AACtB,wBAAO,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,MAAM,CAACH;AAA1B,OAAkCG,MAAlC;AAA0C,MAAA,YAAY,EAAEJ,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAFA,CADH,CADF;AAOD,CARD;;AAUA,MAAMO,YAAY,GAAG,CAAC;AAACN,EAAAA,EAAD;AAAKO,EAAAA,IAAL;AAAWR,EAAAA;AAAX,CAAD,KAA8B;AACjD,sBAAO;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKQ,IAAL,CADK,eAEL;AAAQ,IAAA,OAAO,EAAE,MAAMR,YAAY,CAACC,EAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFK,CAAP;AAID,CALD;;AAOA,eAAeJ,YAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { data } from \"../../../data\";\r\n// more components\r\n// fix - context api, redux (for more complex cases)\r\n\r\n//Prop-drilling is basically a sideeffect when we have multiple components and a component tree and you need to start passing some state from the top component to the bottom component of the component tree\r\n\r\n\r\n//If we want to pass the 'removePerson' prop from 'PropDrilling' component to 'SinglePerson' component, you'll have to pass it to 'list' component, destructure it there, then pass it onto 'SinglePerson' component where you'll have to destructure it again\r\n\r\n//'List' does not require the 'removePerson' prop for any purpose but \r\nconst PropDrilling = () => {\r\n  const [people, setPeople] = useState(data);\r\n\r\n  const removePerson = (id) => {\r\n    const newPeople = people.filter(person => person.id !== id);\r\n    setPeople(newPeople);\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <h3>prop drilling</h3>\r\n      <List people={people} removePerson={removePerson} />\r\n    </section>\r\n  );\r\n};\r\n\r\nconst List = ({ people, removePerson }) => {\r\n  return (\r\n    <>\r\n      {people.map((person) => {\r\n        return <SinglePerson key={person.id} {...person} removePerson={removePerson} />;\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nconst SinglePerson = ({id, name, removePerson}) => {\r\n  return <div className=\"item\">\r\n    <h4>{name}</h4>\r\n    <button onClick={() => removePerson(id)}>Remove</button>\r\n  </div>;\r\n};\r\n\r\nexport default PropDrilling;\r\n"]},"metadata":{},"sourceType":"module"}